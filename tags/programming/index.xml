<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on loikein&#39;s notes</title>
    <link>/tags/programming/</link>
    <description>Recent content in Programming on loikein&#39;s notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 16 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction to Python 3</title>
      <link>/post/2019/06/intro-python/</link>
      <pubDate>Sun, 16 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/06/intro-python/</guid>
      <description>Slides Basics Lab   Slides ch1
ch2
ch3
ch4
 Basics print(&amp;quot;Hello world&amp;quot;) 1 + 2 # Out[1]: 3 print( 1 + 2 ) # 3 print( 2 - 1 ) # 1 print( 2 * 3 ) # 6 print( 4 / 2 ) # 2.0 print( 7 % 3 ) # 1 print( 4 ** 2 ) # 16 &amp;#39;ab&amp;#39; + &amp;#39;cd&amp;#39; # &amp;#39;abcd&amp;#39; height = 1.</description>
    </item>
    
    <item>
      <title>Introduction to JavaScript</title>
      <link>/post/2019/02/intro-js/</link>
      <pubDate>Sun, 10 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/02/intro-js/</guid>
      <description>Basics Constant Variable Assignment Operator Increment Operator String + Varible Property Method  Built-in Object Math Number  Conditional Statement if Truthy and Falsy Short-Circuit Evaluation Ternary Operator else if switch  Function Default Argument Arrow Function Function in Function  Scope Scope Pollution Good Scoping  Array let &amp;amp; const Array Method Nested Array  Loop for while do ... while break Iteration  Object Destructured Assignment Method Built-in Method Nested Object Pass by Reference Loop in Object this get set Factory Function  Class Static Method Inheritance  Module Create Module Use Module Named Export &amp;amp; Import (ES6)  Promise setTimeout then &amp;amp; catch Multiple Promises (Composition) Promise.</description>
    </item>
    
    <item>
      <title>Introduction to C Language</title>
      <link>/post/2018/05/intro-c-rmd/</link>
      <pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/05/intro-c-rmd/</guid>
      <description>0419 1.2 プリント 2.a 変数 2.b 変数の型 2.c 演算子 2.d プリント2 3.a プリントと変数 3.b プリント：出力指定 3.3 円の面積 3.4 演算子2 4.a 読み込み 4.2 読み込みと円の面積 4.3 読み込みと三角形の面積 5.a 型の変換 5.b 型の変換2 5.3 型の変換と平均値 6.2 数学関数と円の面積  0426 7.c if else：大きい方を出力 7.2 if else：等さの判断 7.3 if else：偶数か奇数かの判断 7.4 if else：等さの判断2 8.a if else：入れ子 8.b ３つの整数の最大値判断 8.4 ３つの整数の最小値判断 8.5 BMIの計算・判定 8.6 閏年 8.7 自販機 9.b switch 10.a ループ：for 10.b ループ：合計の計算 10.c ループ：合計の計算2 10.</description>
    </item>
    
    <item>
      <title>Rmd Template</title>
      <link>/post/2018/01/rmd-template/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/01/rmd-template/</guid>
      <description>Words of Warning Rmd Reference Reference Cheatsheet  Inline Code Executed  Display Code R Code Chunk R Code (Inline) Code from Other Languages LaTeX Reference  Image Reference Plot   Words of Warning I use Typora &amp;amp; Sublime Text to write my posts.
Typora’s WYSIWYG mode usually processes .Rmd file correctly, but gets lost in a file as complicated as this one.
When writing long posts in Sublime, minimap &amp;amp; Ouline plugin can be quite handy.</description>
    </item>
    
  </channel>
</rss>